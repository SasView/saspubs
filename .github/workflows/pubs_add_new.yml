# Run once every 30 minutes [or, while testing, for PRs against master...]
on:
  schedule:
    - cron: "*/30 * * * *"
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: "SasView Publications: Automated Check for New Publications"
    runs-on: ubuntu-latest
    steps:
      - name: "A) Checkout saspubs Repository"
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.API_TOKEN_GITHUB }}
      - name: "B) Setup Python"
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: "C) Install Python dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools
          python -m pip install -r ./build_tools/requirements.txt
      - name: "D1) Check that files exist"
        id: md_file_exists
        uses: andstor/file-existence-action@v1
        with:
          files: "/artifacts/SASVIEW_publications.md"
      - name: "D2) Check that files exist"
        id: json_file_exists
        uses: andstor/file-existence-action@v1
        with:
          files: "/artifacts/SASVIEW.json"
      - name: "D3) Check that files exist"
        id: version_file_exists
        uses: andstor/file-existence-action@v1
        with:
          files: "/artifacts/.SASVIEW_version.json"
      - name: "E1) Download archived files if they exist"
        if: steps.md_file_exists.outputs.files_exists == 'true'
        uses: actions/download-artifact@v2
        with:
          path: /artifacts/
          name: SASVIEW_publications.md
      - name: "E2) Download archived files if they exist"
        if: steps.json_file_exists.outputs.files_exists == 'true'
        uses: actions/download-artifact@v2
        with:
          path: /artifacts/
          name: SASVIEW.json
      - name: "E3) Download archived files if they exist"
        if: steps.version_file_exists.outputs.files_exists == 'true'
        uses: actions/download-artifact@v2
        with:
          path: /artifacts/
          name: .SASVIEW_version.json
      - name: "F1) Moved files to appropriate places"
        if: steps.md_file_exists.outputs.files_exists == 'true'
        run: cp SASVIEW_publications.md ./static/SASVIEW_publications.md
      - name: "F2) Moved files to appropriate places"
        if: steps.json_file_exists.outputs.files_exists == 'true'
        run: cp SASVIEW.json ./data/SASVIEW.json
      - name: "F3) Moved files to appropriate places"
        if: steps.version_file_exists.outputs.files_exists == 'true'
        run: cp .SASVIEW_version.json ./data/.SASVIEW_version.json
      - name: "G) Update publications list using the Zotero API"
        run: python ./instrument_zotero_feed.py SASVIEW
      - name: "H1) Archive markdown and json files"
        uses: actions/upload-artifact@v2
        with:
          name: SASVIEW.json
          path: ./data/
      - name: "H2) Archive markdown and json files"
        uses: actions/upload-artifact@v2
        with:
          name: .SASVIEW_version.json
          path: ./data/
      - name: "H3) Archive markdown and json files"
        uses: actions/upload-artifact@v2
        with:
          name: SASVIEW_publications.md
          path: ./static/
      - name: "I) Checkout sasview.github.io Repository"
        uses: actions/checkout@v2
        with:
          repository: sasview/sasview.github.io
          ref: master
          ssh-key: ${{ secrets.API_TOKEN_GITHUB }}
      - name: "J) Download archived files (redux)"
        uses: actions/download-artifact@v2
        with:
          name: SASVIEW_publications.md
          path: /artifacts/
      - name: "K) Copy Markdown File Back Into Workspace"
        run: cp -f ./SASVIEW_publications.md ./publications.md
      - name: "L) Commit And Push Any Changes to Github"
        run: |
          git diff
          if ! git diff-index --quiet HEAD --; then
            git config --global user.name ${{ secrets.GIT_USER_NAME }}
            git config --global user.email ${{ secrets.GIT_EMAIL }}
            git commit ./publications.md -m "publications auto-update `date -d now`"
            git push
          fi
