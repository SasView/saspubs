# Run once every 4 hours
on:
  schedule:
    - cron: "* */4 * * *"

jobs:
  build:
    name: "SasView Publications: Auto-Check for New, Deleted, and Modified Publications"
    runs-on: ubuntu-latest
    steps:
      - name: "A) Set Environment Location"
        run: echo ::set-env name=workspace::$GITHUB_WORKSPACE
      - name: "B) Dump GitHub context"
        env:
          GITHUB_CONTEXT: ${{ toJson(env) }}
        run: echo "$GITHUB_CONTEXT"
      - name: "C) Set Environment Variable"
        run: echo $npm_config_cache
        env:
          npm_config_cache: ${{ env.workspace }}
      - name: "D) Checkout saspubs Repository"
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.API_TOKEN_GITHUB }}
      - name: "E) Setup Python"
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: "F) Install Python dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools
          python -m pip install -r ./build_tools/requirements.txt
      - name: "G) Get Most Recent List of Publications From Zotero"
        run: python ./instrument_zotero_feed.py SASVIEW
      - name: "H) Look For Updates to Zotero List Using Citation Finder"
        run: python ./update_current_list.py SASVIEW ${{ secrets.ZOTERO_KEY }}
      - name: "I) Copy Markdown File Out of Workspace"
        run: cp -f ./static/SASVIEW_publications.md ../publications.md
      - name: "J) Checkout sasview.github.io Repository"
        uses: actions/checkout@v2
        with:
          repository: sasview/sasview.github.io
          ref: master
          ssh-key: ${{ secrets.API_TOKEN_GITHUB }}
      - name: "K) Copy Markdown File Back Into Workspace"
        run: cp -f ../publications.md ./publications.md
      - name: "L) Commit And Push Any Changes to Github"
        run: |
          git diff
          if ! git diff-index --quiet HEAD --; then
            git config --global user.name ${{ secrets.GIT_USER_NAME }}
            git config --global user.email ${{ secrets.GIT_EMAIL }}
            git commit ./publications.md -m "publications auto-update `date -d now`"
            git push
          fi
